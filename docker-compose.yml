version: "3.7"

services:
  react_app:
    container_name: pvmeasure_react
    build:
      context: ./client
      dockerfile: dev.Dockerfile
    image: pbechliv/pvmeasure_react
    ports:
      - 4000:3000
    volumes:
      - ./client/src:/app/src
  recordings_server:
    container_name: "pvmeasure_recordings_server"
    build:
      context: ./recordings_server
      dockerfile: dev.Dockerfile
    image: pbechliv/pvmeasure_recordings_server
    stdin_open: true
    tty: true
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
    volumes:
      - ./recordings_server:/app
      - recordings_media:/app/media
    ports:
      - "8001:8001"
    networks:
      - db
    depends_on:
      - db
  failures_server:
    container_name: "pvmeasure_failures_server"
    build:
      context: ./failures_server
      dockerfile: dev.Dockerfile
    image: pbechliv/pvmeasure_failures_server
    stdin_open: true
    tty: true
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
    volumes:
      - ./failures_server:/app
      - failures_media:/app/media
    ports:
      - "8002:8002"
    networks:
      - db
    depends_on:
      - db
  db:
    container_name: "pvmeasure_db"
    image: postgres:latest
    environment:
      - POSTGRES_USER=pvmeasure
      - POSTGRES_PASSWORD=pvmeasure
    volumes:
      - "db_data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    networks:
      - db
networks:
  db:
    driver: bridge

volumes:
  db_data:
    driver: local
  recordings_media:
    driver: local
  failures_media:
    driver: local
