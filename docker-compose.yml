version: "3.7"

services:
  react_app:
    container_name: pvmeasure_react
    build:
      context: ./client
      dockerfile: dev.Dockerfile
    image: pbechliv/pvmeasure_react
    ports:
      - 4000:3000
    volumes:
      - ./client:/app
  recordings_api:
    container_name: "pvmeasure_recordings_api"
    build:
      context: ./recordings_api
      dockerfile: dev.Dockerfile
    image: pbechliv/pvmeasure_recordings_api
    stdin_open: true
    tty: true
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
    volumes:
      - ./recordings_api:/app
      - recordings_media:/app/media
    ports:
      - "8001:8001"
    networks:
      - recordings
    depends_on:
      - recordings_db
  notes_api:
    container_name: "pvmeasure_notes_api"
    build:
      context: ./notes_api
      dockerfile: dev.Dockerfile
    image: pbechliv/pvmeasure_notes_api
    stdin_open: true
    tty: true
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
    volumes:
      - ./notes_api:/app
      - notes_media:/app/media
    ports:
      - "8002:8002"
    networks:
      - notes
    depends_on:
      - notes_db
  recordings_db:
    container_name: "pvmeasure_recordings_db"
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=recordings
      - POSTGRES_PASSWORD=teiath
    volumes:
      - "recordings_data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    networks:
      - recordings
  notes_db:
    container_name: "pvmeasure_notes_db"
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=notes
      - POSTGRES_PASSWORD=teiath
    volumes:
      - "notes_data:/var/lib/postgresql/data"
    ports:
      - "5433:5432"
    networks:
      - notes
networks:
  recordings:
    driver: bridge
  notes:
    driver: bridge

volumes:
  recordings_data:
    driver: local
  notes_data:
    driver: local
  recordings_media:
    driver: local
  notes_media:
    driver: local
